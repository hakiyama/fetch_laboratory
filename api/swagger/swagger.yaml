swagger: '2.0'
info:
  version: 'first version'
  title: Lambda Laboratory Server
host: localhost:10011
basePath: /

schemes:
  - http
  - https

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  basicAuth:
    type: basic
  tokenAuth:
    type: apiKey
    in: header
    name: Authorization
  apikeyAuth:
    type: apiKey
    in: header
    name: X-API-KEY
#  jwtAuth:
#    authorizationUrl: ""
#    flow: "implicit"
#    type: "oauth2"
#    x-google-issuer: "https://cognito-idp.ap-northeast-1.amazonaws.com/【CognitoのプールID】"
#    x-google-jwks_uri: "https://cognito-idp.ap-northeast-1.amazonaws.com/【CognitoのプールID】/.well-known/jwks.json"
#    x-google-audiences: "【CognitoのアプリクライアントID】"

paths:
  /swagger:
    x-swagger-pipe: swagger_raw

  /download:
    get:
      x-swagger-router-controller: routing
      operationId: upload
      parameters:
        - in: query
          name: param
          type: string
      responses:
        200:
          description: Success
          schema:
            type: file

  /upload:
    post:
      x-swagger-router-controller: routing
      operationId: upload
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: upfile
          type: file
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/CommonResponse"

  /node:
    post:
      x-swagger-router-controller: routing
      operationId: node
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/CommonRequest"
      responses:
        200:
          description: Success
          schema:
            type: object     

  /get-qs:
    get:
      x-swagger-router-controller: routing
      operationId: request
      parameters:
        - in: query
          name: param1
          type: string
        - in: query
          name: param2
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object

  /post-urlencoded:
    post:
      x-swagger-router-controller: routing
      operationId: request
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: formData
          name: param1
          type: string
        - in: formData
          name: param2
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object            

  /post-json:
    post:
      x-swagger-router-controller: routing
      operationId: request
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/InputParam"
      responses:
        200:
          description: Success
          schema:
            type: object     

  /post-formdata:
    post:
      x-swagger-router-controller: routing
      operationId: request
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: param1
          type: string
        - in: formData
          name: param2
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object


definitions:
  InputParam:
    type: "object"
    properties:
      param1:
        type: string
      param2:
        type: string
        
  Empty:
    type: "object"
    title: "Empty Schema"

  CommonRequest:
    type: object
  CommonResponse:
    type: object

